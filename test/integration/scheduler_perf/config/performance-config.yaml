# The following labels are used in this file. (listed in ascending order of the number of covered test cases)
#
# - integration-test: test cases to run as the integration test, usually to spot some issues in the scheduler implementation or scheduler-perf itself.
# - performance: test cases to run in the performance test.
# - short: supplemental label for the above two labels (must not used alone), which literally means short execution time test cases.
#
# Specifically, the CIs use labels like the following:
# - `ci-kubernetes-integration-master` (`integration-test`): Test cases are chosen based on a tradeoff between code coverage and overall runtime.
# It basically covers all test cases but with their smallest workload.
# - `pull-kubernetes-integration` (`integration-test`,`short`): Test cases are chosen so that they should take less than total 5 min to complete.
# - `ci-benchmark-scheduler-perf` (`performance`): Long enough test cases are chosen (ideally, longer than 10 seconds)
# to provide meaningful samples for the pod scheduling rate.
#
# Also, `performance`+`short` isn't used in the CIs, but it's used to test the performance test locally.
# (Sometimes, the test cases with `integration-test` are too small to spot issues.)
#
# Combining "performance" and "fast" selects suitable workloads for a local
# before/after comparisons with benchstat.

- name: SchedulingWithNodeChurn
  workloadTemplate:
    - opcode: createNodes
      countParam: $initNodes
    - opcode: churn
      mode: recreate
      number: 100
      templatePaths:
        - config/churn/node-default.yaml
      intervalMilliseconds: 10
    - opcode: createPods
      countParam: $measurePods
      podTemplatePath: config/templates/pod-default.yaml
      collectMetrics: true
  workloads:
    - name: 100Nodes
      labels: [performance, short]
      params:
        initNodes: 100
        measurePods: 100
    - name: 5000Nodes
      labels: [performance, fast]
      params:
        initNodes: 5000
        measurePods: 2000